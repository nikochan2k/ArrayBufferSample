{
    "compilerOptions": {
        "module": "commonjs",
        "target": "es5",
        "noImplicitAny": true,
        "preserveConstEnums": true,
        "outDir": "transpiled",
        "listFiles": true,
        "sourceMap": true
    },
    "filesGlob": [
        "src/**/*.ts",
        "src/**/*.tsx",
        "test/**/*.ts",
        "typings/**/*.ts"
    ],
    "compileOnSave": true,
    "formatCodeOptions": {
        "indentSize": 4,
        "tabSize": 4,
        "newLineCharacter": "\r\n",
        "convertTabsToSpaces": true,
        "insertSpaceAfterCommaDelimiter": true,
        "insertSpaceAfterSemicolonInForStatements": true,
        "insertSpaceBeforeAndAfterBinaryOperators": true,
        "insertSpaceAfterKeywordsInControlFlowStatements": true,
        "insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
        "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
        "placeOpenBraceOnNewLineForFunctions": false,
        "placeOpenBraceOnNewLineForControlBlocks": false
    },
    "files": [
        "src/Binary.ts",
        "src/Bits.ts",
        "src/Bool.ts",
        "src/Decimal.ts",
        "src/Float.ts",
        "src/LZText.ts",
        "src/Num.ts",
        "src/Particle.ts",
        "src/StatDecimal.ts",
        "src/Text.ts",
        "src/VarBitDecimal.ts",
        "src/VarByteDecimal.ts",
        "src/VarDecimal.ts",
        "test/Benchmark.ts",
        "test/Bool.ts",
        "typings/empower/empower.d.ts",
        "typings/lz-string/lz-string.d.ts",
        "typings/mocha/mocha.d.ts",
        "typings/node/node.d.ts",
        "typings/power-assert-formatter/power-assert-formatter.d.ts",
        "typings/power-assert/power-assert.d.ts",
        "typings/sinon/sinon.d.ts",
        "typings/tsd.d.ts"
    ],
    "atom": {
        "rewriteTsconfig": true
    }
}
